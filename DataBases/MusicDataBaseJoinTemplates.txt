SELECT artists.name, albums.name, songs.track, songs.title FROM songs
   INNER JOIN albums ON songs.album = albums._id
   INNER JOIN artists ON albums.artist = artists._id
   WHERE albums._id = 19
   ORDER BY artists.name, albums.name, songs.track;

SELECT artists.name, albums.name, songs.track, songs.title FROM songs
INNER JOIN albums ON songs.album = albums._id
INNER JOIN artists ON albums.artist = artists._id
WHERE albums._id = 19
ORDER BY artists.name, albums.name, songs.track;

SELECT artists.name, albums.name, songs.track, songs.title FROM songs
INNER JOIN albums ON songs.album = albums._id
INNER JOIN artists ON albums.artist = artists._id
WHERE artists.name = "AC DC"
ORDER BY artists.name, albums.name, songs.track;

SELECT artists.name, albums.name, songs.track, songs.title FROM songs
INNER JOIN albums ON songs.album = albums._id
INNER JOIN artists ON albums.artist = artists._id
WHERE artists.name LIKE "_j%"
ORDER BY artists.name, albums.name, songs.track;

CREATE VIEW artist_list AS
SELECT artists.name, albums.name, songs.track, songs.title FROM songs
INNER JOIN albums ON songs.album = albums._id
INNER JOIN artists ON albums.artist = artists._id
ORDER BY artists.name, albums.name, songs.track;

SELECT * FROM artist_list WHERE name LIKE "jefferson%";

CREATE VIEW album_list AS
SELECT name FROM albums
ORDER BY name;

SELECT * FROM album_list;

DROP VIEW album_list;

CREATE VIEW album_list AS
SELECT name FROM albums
ORDER BY name COLLATE NOCASE;

SELECT * FROM album_list;


DROP VIEW artist_list;

CREATE VIEW artist_list AS
SELECT artists.name AS artist, albums.name AS album, songs.track, songs.
title FROM songs
INNER JOIN albums ON songs.album = albums._id
INNER JOIN artists ON albums.artist = artists._id
ORDER BY artists.name, albums.name, songs.track;


SELECT * FROM artist_list WHERE artist LIKE "jefferson%";

CHALLENGE:

	1. Select the titles of all the songs on the album "Forbidden".

SELECT songs.title FROM songs
INNER JOIN albums ON songs.album = albums._id
WHERE albums.name = "Forbidden";

*******************************************************************************************
	2. Repeat the previous query but this time display the songs in track order.
	You may want to include the track number in the output to verify that it worked ok.

SELECT songs.track, songs.title FROM songs
INNER JOIN albums ON songs.album = albums._id
WHERE albums.name = "Forbidden"
ORDER BY songs.track;

*******************************************************************************************

	3. Display all the songs for the band "Deep Purple".

SELECT artists.name, songs.title FROM songs
INNER JOIN albums ON songs.album = albums._id
INNER JOIN artists ON albums.artist = artists._id
WHERE artists.name = "Deep Purple";

SELECT * FROM artist_list WHERE artist = "Deep Purple";

*******************************************************************************************

	4. Rename the band "Mehitabel" to "One Kitten". Note tahat this is an exception
	to the advice to always fully qualify your column names. SET artists.name
	won't work, you just need to specify name;

	5. Check that the record was correctly renamed.

SELECT artists.name FROM artists;

SELECT artists.name FROM artists WHERE artists.name = "Mehitabel";

UPDATE artists
SET name = "One Kitten"
WHERE name = "Mehitabel";

SELECT artists.name FROM artists;
SELECT artists.name FROM artists WHERE artists.name = "Mehitabel";
SELECT artists.name FROM artists WHERE artists.name = "One Kitten";

*******************************************************************************************

	6. Select the titles of all the songs by Aerosmith in alphabetical order.
	Include only the title in the output.

SELECT songs.title FROM songs
INNER JOIN albums ON songs.album = albums._id
INNER JOIN artists ON albums.artist = artists._id
WHERE artists.name = "Aerosmith"
ORDER BY songs.title;
	
	--------------

SELECT title FROM artist_list 
WHERE artist = "Aerosmith"
ORDER BY title;


*******************************************************************************************

	7. Replace the column that you used in the previous answer with count(title) 
	to get just a count of the number of songs.

SELECT COUNT(songs.title) FROM songs
INNER JOIN albums ON songs.album = albums._id
INNER JOIN artists ON albums.artist = artists._id
WHERE artists.name = "Aerosmith";
	
	--------------

SELECT COUNT(title) FROM artist_list 
WHERE artist = "Aerosmith";

*******************************************************************************************

	8. Repeat step 6. but without any duplicates.

SELECT DISTINCT songs.title FROM songs
INNER JOIN albums ON songs.album = albums._id
INNER JOIN artists ON albums.artist = artists._id
WHERE artists.name = "Aerosmith"
ORDER BY songs.title;
	
	--------------

SELECT DISTINCT title FROM artist_list 
WHERE artist = "Aerosmith"
ORDER BY title;


*******************************************************************************************

	9. Repeat step 7. but without duplicates

SELECT COUNT(DISTINCT songs.title) FROM songs
INNER JOIN albums ON songs.album = albums._id
INNER JOIN artists ON albums.artist = artists._id
WHERE artists.name = "Aerosmith";
	
	--------------

SELECT COUNT(DISTINCT title) FROM artist_list 
WHERE artist = "Aerosmith";
*******************************************************************************************

	10. Rrepeat the previous query to find the number of artists (which should be 1) 
	and the number of albums.

SELECT COUNT(DISTINCT artists.name) FROM artists
WHERE artists.name = "Aerosmith";

SELECT COUNT(DISTINCT albums.name) FROM albums
INNER JOIN artists ON albums.artist = artists._id
WHERE artists.name = "Aerosmith";

	
	--------------

SELECT COUNT(DISTINCT artist) FROM artist_list
WHERE artist = "Aerosmith";

SELECT COUNT(DISTINCT album) FROM artist_list
WHERE artist = "Aerosmith";
